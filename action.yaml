name: 'Terraform Plan to Pull Request'
description: 'This workflow will generate and post a terraform plan to a pull request.'
inputs:
  debug:
    description: Debug workflow with tmate if an error occurs
    required: false
    default: "false"
  GITHUB_TOKEN:
    description: GitHub token for access to the pull request
    required: true
  working-directory:
    description: Working directory for the `run` actions
    required: false
    default: ''
  terraform-version:
    description: Version of terraform to install
    required: false
    default: latest
  terraform-workspace:
    description: Terraform workspace to select. Must already exist 
    required: false
    default: default
  terraform-init-flags:
    description: CLI flags to use with terraform init
    required: false
    default: ""

outputs:
  plan:
    description: 'The plan output'
    value: ${{ format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) }}
  artifact:
    description: 'The file name of the terraform plan artifact'
    value: "pr-${{ github.event.pull_request.number }}-tfplan"
runs:
  using: "composite"
  steps:

    - run: touch tfplan
      id: touch
      shell: bash
      working-directory: ${{ inputs.working-directory }}


    - name: Save Artifact
      id: save-artifact
      uses: actions/upload-artifact@v3
      with:
        name: pr-${{ github.event.pull_request.number }}-tfplan
        path: ${{ join([github.workspace, inputs.working-directory], '/') }}/tfplan
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Debug with TMATE if the debug environment variable is set to "true" and something failed
      if: ${{ (failure() || steps.plan.outcome == 'failure') && inputs.debug == 'true' }}
      uses: mxschmitt/action-tmate@v3

    - name: Workflow Run Status
      shell: bash
      if: steps.plan.outcome == 'failure'
      run: exit 1